name: RestAssured Test Suite with API

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'src/test/resources/TestSuites/regressionTest.xml'
        type: choice
        options:
          - src/test/resources/TestSuites/regressionTest.xml
          - src/test/resources/TestSuites/smokeTest.xml
          - src/test/resources/TestSuites/authTest.xml

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout test repository
        uses: actions/checkout@v4
        with:
          path: tests

      - name: Checkout API repository
        uses: actions/checkout@v4
        with:
          repository: your-username/your-api-repo-name  # Change this to your API repo
          path: api
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Restore .NET dependencies
        run: dotnet restore
        working-directory: ./api

      - name: Build .NET API
        run: dotnet build --no-restore
        working-directory: ./api

      - name: Start .NET API in background
        run: |
          cd api
          nohup dotnet run --urls http://localhost:5000 > ../api.log 2>&1 &
          API_PID=$!
          echo "API_PID=$API_PID" >> $GITHUB_ENV
          echo "Started API with PID: $API_PID"
        env:
          ASPNETCORE_ENVIRONMENT: Development

      - name: Wait for API to start
        run: |
          echo "Waiting for API to start..."
          for i in {1..30}; do
            if curl -f http://localhost:5000 >/dev/null 2>&1 || curl -f http://localhost:5000/health >/dev/null 2>&1; then
              echo "API is ready!"
              break
            fi
            echo "Attempt $i: API not ready yet, waiting..."
            sleep 2
          done

      - name: Clean and compile tests
        run: mvn clean compile
        working-directory: ./tests

      - name: Run tests
        run: |
          cd tests
          if [ "${{ github.event.inputs.test_suite }}" != "" ]; then
            mvn clean install -Dfile="${{ github.event.inputs.test_suite }}"
          else
            mvn clean install -Dfile="src/test/resources/TestSuites/regressionTest.xml"
          fi
        env:
          BASE_URL: http://localhost:5000
        continue-on-error: true

      - name: Stop .NET API
        if: always()
        run: |
          if [ ! -z "$API_PID" ]; then
            echo "Stopping API with PID: $API_PID"
            kill $API_PID || true
          fi
          pkill -f "dotnet run" || true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            tests/target/surefire-reports/
            tests/test-output/
          retention-days: 30